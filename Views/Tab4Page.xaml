<?xml version="1.0" encoding="utf-8" ?>
<Page
    x:Class="TabApp.Views.Tab4Page"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behave="using:TabApp.Behaviors"
    xmlns:ctrl="using:TabApp.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:interact="using:Microsoft.Xaml.Interactivity"
    xmlns:interactcore="using:Microsoft.Xaml.Interactions.Core"
    xmlns:local="using:TabApp.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="using:TabApp.Models"
    xmlns:root="using:TabApp"
    xmlns:wr="using:TabApp.Redemption"
    x:Name="ThisPage"
    Background="{ThemeResource BackgroundBrush}"
    mc:Ignorable="d">
    <Page.Resources>
        <ThemeShadow x:Name="SharedShadow" />
        <Storyboard x:Name="OpacityStoryboard">
            <DoubleAnimation
                AutoReverse="False"
                Storyboard.TargetName="root"
                Storyboard.TargetProperty="Opacity"
                From="0"
                To="1"
                Duration="0:0:1.2" />
        </Storyboard>
    </Page.Resources>

    <interact:Interaction.Behaviors>
        <!--
            [FrameworkElement Events]
            Loaded
            Loading
            Unloaded
            DataContextChanged
            EffectiveViewportChanged
            LayoutUpdated
            SizeChanged
        -->
        <interactcore:EventTriggerBehavior EventName="Loading">
            <interactcore:InvokeCommandAction Command="{x:Bind ViewModel.SampleCommand}" CommandParameter="PageLoading" />
        </interactcore:EventTriggerBehavior>
    </interact:Interaction.Behaviors>

    <Grid
        x:Name="root"
        Grid.Row="1"
        Margin="10,10,20,20"
        HorizontalAlignment="Stretch"
        VerticalAlignment="Stretch"
        BorderBrush="{ThemeResource GradientBrushDiag}"
        BorderThickness="4"
        ColumnSpacing="5"
        CornerRadius="5"
        RowSpacing="5"
        Shadow="{StaticResource SharedShadow}"
        Translation="0,0,64">
        <Grid.RowDefinitions>
            <RowDefinition Height="6*" />
            <RowDefinition Height="1*" />
            <RowDefinition Height="1*" />
        </Grid.RowDefinitions>

        <RelativePanel Grid.Row="0" BorderThickness="0">

            <!--#region [Controls]-->
            <StackPanel
                VerticalAlignment="Top"
                Orientation="Vertical"
                RelativePanel.AlignLeftWithPanel="True"
                RelativePanel.AlignRightWithPanel="True"
                RelativePanel.AlignTopWithPanel="True">
                <TextBlock
                    Margin="20,10"
                    FontSize="{StaticResource FontSizeHuge}"
                    Text="Tab #4"
                    TextTrimming="CharacterEllipsis" />

                <StackPanel
                    Margin="20,10"
                    Orientation="Horizontal"
                    Spacing="20">
                    <Button
                        Command="{x:Bind ViewModel.SampleCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}"
                        Content="Sample Command"
                        IsEnabled="{x:Bind ViewModel.IsBusy, Converter={StaticResource BooleanInverter}, Mode=OneWay}"
                        Style="{StaticResource EnhancedButtonStyle}" />
                    <Button
                        Command="{x:Bind ViewModel.ThrowExCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}"
                        Content="Exception Command"
                        IsEnabled="{x:Bind ViewModel.IsBusy, Converter={StaticResource BooleanInverter}, Mode=OneWay}"
                        Style="{StaticResource EnhancedButtonStyle}" />
                    <ProgressRing
                        x:Name="prSpinner"
                        Width="28"
                        Height="28"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Foreground="{ThemeResource SecondaryBrush}"
                        Visibility="{x:Bind ViewModel.IsBusy, Mode=OneWay, Converter={StaticResource BooleanVisibility}, ConverterParameter=False}" />
                    <Image
                        x:Name="imgSpinner"
                        Width="32"
                        Height="32"
                        Margin="10,0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Source="/Assets/SpinnerGear.png"
                        Stretch="Uniform"
                        Visibility="{x:Bind ViewModel.IsBusy, Mode=OneWay, Converter={StaticResource BooleanVisibility}, ConverterParameter=False}">
                        <Image.Resources>
                            <Storyboard x:Name="StoryboardSpinner" RepeatBehavior="Forever">
                                <DoubleAnimation
                                    x:Name="dblAnimation"
                                    Storyboard.TargetName="spinnerTransform"
                                    Storyboard.TargetProperty="Angle"
                                    From="0"
                                    To="360"
                                    Duration="00:00:06.1">
                                    <DoubleAnimation.EasingFunction>
                                        <!--
                                        <CircleEase EasingMode="EaseInOut" />
                                        <BackEase Amplitude="0.5" EasingMode="EaseInOut" />
                                        -->
                                        <ElasticEase Oscillations="2" Springiness="0.5" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </Image.Resources>
                        <Image.RenderTransform>
                            <!--  This must be equal to half of the image width/height.  -->
                            <RotateTransform x:Name="spinnerTransform" CenterX="16" CenterY="16" />
                        </Image.RenderTransform>
                    </Image>
                </StackPanel>

                <AutoSuggestBox
                    x:Name="asb"
                    MinWidth="200"
                    Margin="24,20"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Header="I'll guess your first name"
                    PlaceholderText="Start typing"
                    QueryIcon="Find"
                    QuerySubmitted="AutoSuggestBox_QuerySubmitted"
                    SuggestionChosen="AutoSuggestBox_SuggestionChosen">
                    <interact:Interaction.Behaviors>
                        <behave:AutoFocusBehavior />
                        <behave:TypingPauseBehavior
                            MinimumCharacters="1"
                            MinimumDelay="500"
                            TypingPaused="AutoSuggestBox_TypingPaused" />
                    </interact:Interaction.Behaviors>
                </AutoSuggestBox>

                <ctrl:GroupBox
                    MinWidth="400"
                    Margin="24,20"
                    HorizontalAlignment="Left"
                    BorderBrush="{ThemeResource SecondaryBorderBrush}"
                    FontSize="{StaticResource FontSizeMedium}">
                    <ctrl:GroupBox.Heading>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Margin="0,0,5,0" Text="KeyDown Behavior" />
                            <!--  https://learn.microsoft.com/en-us/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.symbol?view=windows-app-sdk-1.5#fields  -->
                            <SymbolIcon
                                VerticalAlignment="Bottom"
                                Foreground="{ThemeResource SecondaryBrush}"
                                Symbol="Keyboard" />
                        </StackPanel>
                    </ctrl:GroupBox.Heading>
                    <!--#region [Behavior Testing]-->
                    <TextBox
                        MinWidth="370"
                        Margin="6"
                        PlaceholderText="Set the focus to this TextBox and press [Enter]"
                        Text="{x:Bind ViewModel.Counter, Mode=OneWay}">
                        <interact:Interaction.Behaviors>
                            <behave:KeyDownTriggerBehavior Key="Enter">
                                <interactcore:CallMethodAction MethodName="IncrementCount" TargetObject="{x:Bind}" />
                                <interactcore:InvokeCommandAction Command="{x:Bind ViewModel.SampleCommand}" CommandParameter="{x:Bind}" />
                                <!--<interactcore:ChangePropertyAction
                                    PropertyName="MinWidth"
                                    TargetObject="{x:Bind asb}"
                                    Value="300" />-->
                            </behave:KeyDownTriggerBehavior>
                            <interactcore:EventTriggerBehavior EventName="PointerEntered">
                                <interactcore:ChangePropertyAction
                                    PropertyName="MinWidth"
                                    TargetObject="{x:Bind asb}"
                                    Value="300" />
                            </interactcore:EventTriggerBehavior>
                            <interactcore:EventTriggerBehavior EventName="PointerExited">
                                <interactcore:ChangePropertyAction
                                    PropertyName="MinWidth"
                                    TargetObject="{x:Bind asb}"
                                    Value="200" />
                            </interactcore:EventTriggerBehavior>
                            <interactcore:EventTriggerBehavior EventName="PointerCanceled">
                                <interactcore:ChangePropertyAction
                                    PropertyName="MinWidth"
                                    TargetObject="{x:Bind asb}"
                                    Value="100" />
                            </interactcore:EventTriggerBehavior>
                        </interact:Interaction.Behaviors>
                    </TextBox>
                    <!--#endregion-->
                </ctrl:GroupBox>

            </StackPanel>
            <!--#endregion-->

            <!--#region [Footer]-->
            <StackPanel
                Margin="20,20,20,20"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                BorderBrush="{ThemeResource BorderBrush}"
                BorderThickness="2"
                CornerRadius="4"
                Orientation="Vertical"
                RelativePanel.AlignBottomWithPanel="True"
                RelativePanel.AlignLeftWithPanel="True"
                RelativePanel.AlignRightWithPanel="True">
                <StackPanel.ChildrenTransitions>
                    <TransitionCollection>
                        <AddDeleteThemeTransition />
                    </TransitionCollection>
                </StackPanel.ChildrenTransitions>
                <!--  Version Area  -->
                <Grid Margin="0">
                    <Grid.Background>
                        <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                            <GradientStopCollection>
                                <GradientStop Offset="0" Color="#FF5FB2F2" />
                                <GradientStop Offset="0.05" Color="#FF5196CC" />
                                <GradientStop Offset="0.15" Color="#FF3D7199" />
                                <GradientStop Offset="0.2" Color="#FF284B66" />
                                <GradientStop Offset="0.3" Color="#FF142533" />
                                <GradientStop Offset="1.0" Color="#FF0A1219" />
                            </GradientStopCollection>
                        </LinearGradientBrush>
                    </Grid.Background>
                    <Image
                        Width="30"
                        Height="30"
                        Margin="10,5,12,5"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Opacity="0.8"
                        Source="/Assets/Details.png" />
                    <TextBlock
                        Grid.Row="0"
                        Margin="12,5,10,5"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        FontSize="14"
                        Foreground="{ThemeResource PrimaryBrush}"
                        Text="{x:Bind root:AssemblyHelper.GetVersion()}"
                        TextTrimming="CharacterEllipsis" />
                </Grid>
            </StackPanel>
            <!--#endregion-->

        </RelativePanel>

        <Grid Grid.Row="1" Margin="20,0,0,0">
            <StackPanel Orientation="Vertical">
                <ctrl:SeparatorLine />
                <TextBlock
                    x:Name="url"
                    Margin="5,10,5,20"
                    FontSize="{StaticResource FontSizeSmall}"
                    TextTrimming="CharacterEllipsis"
                    TextWrapping="WrapWholeWords">
                    <interact:Interaction.Behaviors>
                        <behave:HyperlinkTextBlockBehavior />
                    </interact:Interaction.Behaviors>
                </TextBlock>
                <!--#region [custom divider]-->
                <Grid
                    Margin="2,0,20,0"
                    ColumnSpacing="0"
                    RowSpacing="0">
                    <Rectangle
                        Height="2"
                        Margin="0,2,0,0"
                        HorizontalAlignment="Stretch"
                        RadiusX="4"
                        RadiusY="4">
                        <Rectangle.Fill>
                            <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStop Offset="0" Color="#FF76B9ED" />
                                    <GradientStop Offset="0.2" Color="#6F76B9ED" />
                                    <GradientStop Offset="1" Color="#2F76B9ED" />
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <Rectangle
                        Height="1"
                        Margin="0,-2,0,0"
                        HorizontalAlignment="Stretch"
                        Fill="Gray"
                        RadiusX="4"
                        RadiusY="4" />
                </Grid>
                <!--#endregion-->
            </StackPanel>
        </Grid>

        <!--  AutoCloseInfoBar Testing  -->
        <ctrl:AutoCloseInfoBar
            x:Name="infoBar"
            Grid.Row="2"
            Margin="6"
            VerticalAlignment="Bottom"
            AutoCloseInterval="5000"
            IsOpen="False"
            Severity="Informational" />

        <!-- NOTE: An InfoBar can also have content extend below the Message
                   area. Comment out the AutoCloseInfoBar above and uncomment
                   the standard InfoBar XAML below to see this in action.
        <InfoBar
            x:Name="infoBar"
            Grid.Row="2"
            Margin="6"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Bottom"
            IsOpen="True"
            Severity="Informational">
            <InfoBar.Content>
                <Grid MaxHeight="50" Margin="0,0,0,1">
                    <ScrollViewer>
                        <ItemsRepeater x:Name="ibItemsRepeater" ItemsSource="{x:Bind ViewModel.NamedColors, Mode=OneWay}">
                            <ItemsRepeater.Transitions>
                                <RepositionThemeTransition />
                            </ItemsRepeater.Transitions>
                            <ItemsRepeater.ItemTemplate>
                                <DataTemplate x:DataType="model:NamedColor">
                                    <StackPanel
                                        Margin="0,2"
                                        Padding="6,2"
                                        Background="{x:Bind Color, Mode=OneWay, Converter={StaticResource ColorToBrush}}"
                                        CornerRadius="5">
                                        <Grid ColumnDefinitions="2*,1*" ColumnSpacing="6">
                                            <TextBlock
                                                Grid.Column="0"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center"
                                                Text="{x:Bind Amount, Mode=OneWay}" />
                                            <TextBlock
                                                Grid.Column="1"
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Center"
                                                Text="{x:Bind Time, Mode=OneWay}" />
                                        </Grid>
                                    </StackPanel>
                                </DataTemplate>
                            </ItemsRepeater.ItemTemplate>
                        </ItemsRepeater>
                    </ScrollViewer>
                </Grid>
            </InfoBar.Content>
        </InfoBar>
        -->

    </Grid>

</Page>
