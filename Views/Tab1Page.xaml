<?xml version="1.0" encoding="utf-8" ?>
<Page
    x:Class="TabApp.Views.Tab1Page"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ctrl="using:TabApp.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helper="using:TabApp.Helpers"
    xmlns:local="using:TabApp.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="using:TabApp.Models"
    xmlns:root="using:TabApp"
    x:Name="ThisPage"
    Background="{ThemeResource BackgroundBrush}"
    mc:Ignorable="d">
    <Page.Resources>
        <ThemeShadow x:Name="SharedShadow" />
        <Storyboard x:Name="OpacityStoryboard">
            <DoubleAnimation
                AutoReverse="False"
                Storyboard.TargetName="root"
                Storyboard.TargetProperty="Opacity"
                From="0"
                To="1"
                Duration="0:0:1.2" />
        </Storyboard>
    </Page.Resources>

    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!--#region [Animated InfoBar]-->
        <InfoBar
            x:Name="ibar"
            Grid.Row="1"
            MinWidth="250"
            Margin="10,10,20,10"
            HorizontalAlignment="Right"
            Content="Status Messages Here"
            IsOpen="False"
            Opacity="0"
            Severity="Informational">
            <InfoBar.Resources>
                <Storyboard x:Name="StoryboardInfoBar">
                    <DoubleAnimation
                        Storyboard.TargetName="TranslationInfoBar"
                        Storyboard.TargetProperty="Y"
                        Duration="0:0:1.1">
                        <DoubleAnimation.EasingFunction>
                            <CircleEase EasingMode="EaseInOut" />
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                </Storyboard>
                <Storyboard x:Name="StoryboardOpacity">
                    <DoubleAnimation
                        Storyboard.TargetName="ibar"
                        Storyboard.TargetProperty="Opacity"
                        Duration="0:0:1.1">
                        <DoubleAnimation.EasingFunction>
                            <CircleEase EasingMode="EaseInOut" />
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                </Storyboard>
            </InfoBar.Resources>
            <InfoBar.RenderTransform>
                <TranslateTransform x:Name="TranslationInfoBar" />
            </InfoBar.RenderTransform>
        </InfoBar>
        <!--#endregion-->

        <Grid
            x:Name="root"
            Grid.Row="1"
            Margin="10,10,20,20"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            BorderBrush="{ThemeResource GradientBrushDiag}"
            BorderThickness="4"
            ColumnSpacing="5"
            CornerRadius="5"
            RowSpacing="5"
            Shadow="{StaticResource SharedShadow}"
            Translation="0,0,64">
            <Grid.RowDefinitions>
                <RowDefinition Height="1*" />
                <RowDefinition Height="3*" />
            </Grid.RowDefinitions>

            <!--#region [Controls]-->
            <StackPanel Grid.Row="0" Orientation="Vertical">
                <TextBlock
                    Margin="20,10"
                    FontSize="{StaticResource FontSizeHuge}"
                    Text="Tab #1" />
                <Grid
                    Margin="20,10"
                    HorizontalAlignment="Stretch"
                    ColumnDefinitions="2*,2*">
                    <StackPanel
                        Grid.Column="0"
                        HorizontalAlignment="Left"
                        Orientation="Horizontal"
                        Spacing="20">
                        <Button
                            Command="{x:Bind ViewModel.SampleCommand}"
                            CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}"
                            Content="Search"
                            IsEnabled="{x:Bind ViewModel.IsBusy, Converter={StaticResource BooleanInverter}, Mode=OneWay}"
                            Style="{StaticResource EnhancedButtonStyle}" />
                        <ProgressRing
                            Width="28"
                            Height="28"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Foreground="{ThemeResource SecondaryBrush}"
                            Visibility="{x:Bind ViewModel.IsBusy, Mode=OneWay, Converter={StaticResource BooleanVisibility}, ConverterParameter=False}" />
                    </StackPanel>
                    <StackPanel
                        Grid.Column="1"
                        HorizontalAlignment="Right"
                        Orientation="Horizontal"
                        Spacing="5">
                        <ToggleSwitch Header="Option #1" IsOn="{x:Bind ViewModel.Option1, Mode=TwoWay}" />
                        <ToggleSwitch Header="Option #2" IsOn="{x:Bind ViewModel.Option2, Mode=TwoWay}" />
                        <ToggleSwitch Header="Option #3" IsOn="{x:Bind ViewModel.Option3, Mode=TwoWay}" />
                    </StackPanel>
                </Grid>
            </StackPanel>
            <!--#endregion-->

            <!--#region [DataItem ListView]-->
            <Grid
                Grid.Row="1"
                Margin="10"
                Padding="8"
                VerticalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.Resources>
                    <Style x:Key="ColumnHeaderBorderStyle" TargetType="Border">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Padding" Value="0,0,10,0" />
                        <Setter Property="CornerRadius" Value="2" />
                        <Setter Property="BorderThickness" Value="0,0,0,2" />
                        <Setter Property="BorderBrush" Value="{StaticResource HeaderBrush}" />
                        <Setter Property="Margin" Value="5,1,11,1" />
                    </Style>
                    <Style x:Key="ColumnHeaderTextBlockStyle" TargetType="TextBlock">
                        <Setter Property="Margin" Value="5,0" />
                        <Setter Property="FontWeight" Value="Normal" />
                        <Setter Property="FontFamily" Value="{StaticResource PrimaryFont}" />
                        <Setter Property="FontSize" Value="{StaticResource FontSizeMedium}" />
                    </Style>
                </Grid.Resources>

                <!--#region [Header]-->
                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition Width="12*" />
                        <ColumnDefinition Width="4*" />
                    </Grid.ColumnDefinitions>
                    <Grid.Resources>
                        <Style BasedOn="{StaticResource ColumnHeaderBorderStyle}" TargetType="Border" />
                        <Style BasedOn="{StaticResource ColumnHeaderTextBlockStyle}" TargetType="TextBlock" />
                    </Grid.Resources>
                    <Border Grid.Column="0">
                        <TextBlock Foreground="{ThemeResource HeaderBrush}" Text="Title" />
                    </Border>
                    <Border Grid.Column="1">
                        <TextBlock Foreground="{ThemeResource HeaderBrush}" Text="Data" />
                    </Border>
                    <Border Grid.Column="2">
                        <TextBlock Foreground="{ThemeResource HeaderBrush}" Text="Last Updated" />
                    </Border>
                </Grid>
                <!--#endregion-->

                <!--#region [Content]-->
                <!--
                    helper:ScrollViewerExtensions.VerticalScrollBarMargin="{Binding MinHeight, ElementName=gridItem, Converter={StaticResource DoubleTopThickness}}"
                -->
                <ListView
                    x:Name="DataListView"
                    Grid.Row="1"
                    VerticalAlignment="Stretch"
                    helper:AttachedCommand.ScrollTarget="{x:Bind ViewModel.ScrollToItem, Mode=OneWay}"
                    IsHitTestVisible="{x:Bind ViewModel.IsBusy, Converter={StaticResource BooleanInverter}, Mode=OneWay}"
                    ItemsSource="{x:Bind ViewModel.DataItems, Mode=OneWay}"
                    Loaded="DataListView_Loaded"
                    ScrollViewer.HorizontalScrollBarVisibility="Auto"
                    ScrollViewer.HorizontalScrollMode="Enabled"
                    ScrollViewer.VerticalScrollBarVisibility="Visible"
                    ScrollViewer.VerticalScrollMode="Enabled"
                    SelectedItem="{x:Bind ViewModel.SelectedItem, Mode=TwoWay}"
                    SelectionChanged="DataListViewSelectionChanged"
                    SelectionMode="Single">
                    <ListView.Transitions>
                        <TransitionCollection>
                            <AddDeleteThemeTransition />
                        </TransitionCollection>
                    </ListView.Transitions>
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="model:DataItem">
                            <Border
                                Padding="0"
                                BorderBrush="{ThemeResource BorderBrush}"
                                BorderThickness="0,0,0,0"
                                CornerRadius="5"
                                Opacity="{Binding ElementName=ThisPage, Path=ViewModel.IsBusy, Mode=OneWay, Converter={StaticResource BooleanOpacityInverse}}">
                                <Grid x:Name="gridItem">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="2*" />
                                        <ColumnDefinition Width="12*" />
                                        <ColumnDefinition Width="4*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.Resources>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="FontWeight" Value="Normal" />
                                            <Setter Property="FontFamily" Value="{StaticResource PrimaryFont}" />
                                            <Setter Property="Foreground" Value="{ThemeResource PrimaryBrush}" />
                                            <Setter Property="FontSize" Value="{StaticResource FontSizeMedium}" />
                                        </Style>
                                    </Grid.Resources>
                                    <TextBlock
                                        Grid.Column="0"
                                        Margin="1,0,1,0"
                                        Text="{x:Bind Title, Mode=OneWay}" />
                                    <TextBlock
                                        Grid.Column="1"
                                        Margin="1,0,1,0"
                                        Text="{x:Bind Data, Mode=OneWay}" />
                                    <TextBlock
                                        Grid.Column="2"
                                        Margin="20,0,1,0"
                                        Text="{x:Bind Updated, Mode=OneWay, Converter={StaticResource StringToFormat}, ConverterParameter='{}{0:ddd, dd MMM yyyy – hh:mm tt}'}" />
                                </Grid>

                            </Border>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                <!--#endregion-->
            </Grid>
            <!--#endregion-->

        </Grid>

        <!--  Responsive Visual States  -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <!--#region [Using a custom trigger]-->
                <VisualState x:Name="CustomBusy">
                    <VisualState.StateTriggers>
                        <helper:CustomStateTrigger CurrentState="{x:Bind ViewModel.IsBusy, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  [Visuals]  -->
                        <!--<Setter Target="ibar.IsOpen" Value="True" />-->
                        <Setter Target="ibar.Content" Value="Running process..." />
                        <!--  [Define new column widths]  -->
                        <!--
                        <Setter Target="rootGrid.ColumnDefinitions[0].Width" Value="9*" />
                        <Setter Target="rootGrid.ColumnDefinitions[1].Width" Value="3*" />
                        -->
                        <!--  [Define new row heights]  -->
                        <!--
                        <Setter Target="rootGrid.RowDefinitions[0].Height" Value="35" />
                        <Setter Target="rootGrid.RowDefinitions[1].Height" Value="2*" />
                        <Setter Target="rootGrid.RowDefinitions[2].Height" Value="10*" />
                        <Setter Target="rootGrid.RowDefinitions[3].Height" Value="0" />
                        -->
                        <!--  [Move some things around]  -->
                        <!--
                        <Setter Target="lvMessages.(Grid.Row)" Value="1" />
                        <Setter Target="expander.(Grid.Row)" Value="3" />
                        -->
                        <!-- [Other example properties]
                        <Setter Target="lvMessages.Background" Value="Green" />
                        <Setter Target="expander.IsExpanded" Value="False" />
                        <Setter Target="lvMessages.(RelativePanel.RightOf)" Value="expander" />
                        <Setter Target="splitView.DisplayMode" Value="Inline" />
                        <Setter Target="titleBarImage.Margin" Value="6,0,4,0" />
                        <Setter Target="someButton.Style" Value="{StaticResource MyButtonStyle}" />
                        -->
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="CustomNotBusy">
                    <VisualState.StateTriggers>
                        <helper:CustomStateTrigger CurrentState="{x:Bind ViewModel.IsBusy, Mode=OneWay, Converter={StaticResource BooleanInverter}}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  [Visuals]  -->
                        <!--<Setter Target="ibar.IsOpen" Value="False" />-->
                        <Setter Target="ibar.Content" Value="Process finished." />
                        <!--  [Define new column widths]  -->
                        <!--
                        <Setter Target="rootGrid.ColumnDefinitions[0].Width" Value="9*" />
                        <Setter Target="rootGrid.ColumnDefinitions[1].Width" Value="2*" />
                        -->
                        <!--  [Define new row heights]  -->
                        <!--
                        <Setter Target="rootGrid.RowDefinitions[0].Height" Value="35" />
                        <Setter Target="rootGrid.RowDefinitions[1].Height" Value="2*" />
                        <Setter Target="rootGrid.RowDefinitions[2].Height" Value="10*" />
                        <Setter Target="rootGrid.RowDefinitions[3].Height" Value="0" />
                        -->
                        <!--  [Move some things around]  -->
                        <!--
                        <Setter Target="lvMessages.(Grid.Row)" Value="1" />
                        <Setter Target="expander.(Grid.Row)" Value="3" />
                        -->
                        <!-- [Other example properties]
                        <Setter Target="lvMessages.Background" Value="Green" />
                        <Setter Target="expander.IsExpanded" Value="False" />
                        <Setter Target="lvMessages.(RelativePanel.RightOf)" Value="expander" />
                        <Setter Target="splitView.DisplayMode" Value="Inline" />
                        <Setter Target="titleBarImage.Margin" Value="6,0,4,0" />
                        <Setter Target="someButton.Style" Value="{StaticResource MyButtonStyle}" />
                        -->
                    </VisualState.Setters>
                </VisualState>
                <!--#endregion-->
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>

</Page>
